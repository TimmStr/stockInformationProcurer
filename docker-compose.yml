version: '3.9'

networks:
  ms-network:
    driver: bridge

services:
  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5431:5431"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password


  adminer:
    image: adminer
    restart: always
    ports:
      - "9094:9094"
    command:
      - 'php'
      - '-S'
      - '[::]:9094'
      - '-t'
      - '/var/www/html'
    entrypoint:
      - 'entrypoint.sh'


  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    container_name: keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - ms-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: stocks
    volumes:
      - mongodb_data:/data/db

    networks:
      - ms-network

  document-service:
    build: ./DocumentService
    restart: on-failure
    ports:
      - "9010:9010"
    networks:
      - ms-network

  mail-service:
    build: ./MailService
    restart: on-failure
    ports:
      - "9020:9020"
    #    depends_on:
    #      - mongodb
    networks:
      - ms-network


  stock-analysis-service:
    build: ./StockAnalysisService
    restart: on-failure
    ports:
      - "9030:9030"
    #    depends_on:
    #      - mongodb
    networks:
      - ms-network

#  stock-web-scraping-service:
#    build: ./StockWebScrapingServiceNew
#    restart: on-failure
#    ports:
#      - "9040:9040"
##    depends_on:
##      - mongodb
#    networks:
#      - ms-network


  stock-web-scraping-service-py:
    build: ./StockWebScrapingServicePython
    restart: on-failure
    ports:
      - "9040:9040"
    #    depends_on:
    #      - mongodb
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - ms-network


  user-service:
    build: ./UserService
    restart: on-failure
    ports:
      - "9050:9050"
    #    depends_on:
    #      - mongodb
    networks:
      - ms-network


volumes:
  mongodb_data:
  postgres_data:
    driver: local